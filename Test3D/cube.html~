<! DOCTYPE html>
<html>
  <head>
    <meta charset = "UTF-8" >
    <title> Three.js tutorial 1 </title>
    <script src = "Three.js" > </script>
    <style type = "text /css" >
      div # canvas-frame {
      border: none;
      cursor: pointer;
      width: 600px;
      height: 600px;
      background-color:  #EEEEEE;
      }
    </style>
    <script>
      var  renderer;
      function  InitThree () {
      width = document.getElementById ( 'canvas-frame' ) .ClientWidth;
      height = document.getElementById ( 'canvas-frame' ) .ClientHeight;  
      renderer = new  THREE.WebGLRenderer ({Antialias: true });
      renderer.setSize (width, height);
      document.getElementById ( 'canvas-frame' ) .AppendChild (Renderer.DomElement);
      renderer.setClearColorHex (0xFFFFFF, 1.0);
      }
      
      var  camera;
      function  InitCamera () {  
      camera = new  THREE.PerspectiveCamera (45, width /height, 1, 10000);
      camera.position.x = 100;
      camera.position.y = 20;
      camera.position.z = 50;
      camera.up.x = 0;
      camera.up.y = 0;
      camera.up.z = 1;
      camera.lookAt ({x: 0, y: 0, z: 0});
      }
      var  Scene;
      function  InitScene () {    
      Scene = new  THREE.Scene ();
      }
      var  light;
      function  InitLight () {  
      light = new  THREE.DirectionalLight (0xFF0000, 1.0, 0);
      light.position.set (100, 100, 200);
      scene.add (light);
      }
      var  Cube;
      function  initObject () {   
      Cube = new  THREE.Mesh (
      new  THREE.CubeGeometry (50,50,50),                 setting of //shape
      new  THREE.MeshLambertMaterial ({color: 0xff0000}) set of //Material
      );
      scene.add (cube);
      cube.position.set (0,0,0);
      }
      function  ThreeStart () {
      initThree ();
      initCamera ();
      initScene ();    
      initLight ();
      initObject ();
      renderer.clear ();  
      renderer.render (scene, camera);
      }
    </script>
  </head>

  <body.g onload = "ThreeStart ();" >
    <div id = "canvas-frame" > </div>
  </body.g>
</html>
